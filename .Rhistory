source("~/ai-project/section3_code.R", echo=TRUE)
source("~/ai-project/section3_code.R", echo=TRUE)
source("~/ai-project/section3_code.R", echo=TRUE)
source("~/ai-project/section3_code.R", echo=TRUE)
source("~/ai-project/section3_code.R", echo=TRUE)
source("~/ai-project/section3_code.R", echo=TRUE)
source("~/ai-project/section3_code.R", echo=TRUE)
source("~/ai-project/section3_code.R", echo=TRUE)
source("~/ai-project/section3_code.R", echo=TRUE)
source("~/ai-project/section3_code.R", echo=TRUE)
source("~/ai-project/section3_code.R", echo=TRUE)
source("~/ai-project/section3_code.R", echo=TRUE)
source("~/ai-project/section3_code.R", echo=TRUE)
source("~/ai-project/section3_code.R", echo=TRUE)
source("~/ai-project/section3_code.R", echo=TRUE)
source("~/ai-project/section3_code.R", echo=TRUE)
source("~/ai-project/section3_code.R", echo=TRUE)
source("~/ai-project/section3_code.R", echo=TRUE)
source("~/ai-project/section3_code.R", echo=TRUE)
source("~/ai-project/section3_code.R", echo=TRUE)
source("~/ai-project/section3_code.R", echo=TRUE)
source("~/ai-project/section3_code.R", echo=TRUE)
source("~/ai-project/section3_code.R", echo=TRUE)
source("~/ai-project/section3_code.R", echo=TRUE)
source("~/ai-project/section3_code.R", echo=TRUE)
source("~/ai-project/section3_code.R", echo=TRUE)
source("~/ai-project/section3_code.R", echo=TRUE)
source("~/ai-project/section3_code.R", echo=TRUE)
source("~/ai-project/section3_code.R", echo=TRUE)
source("~/ai-project/section3_code.R", echo=TRUE)
source("~/ai-project/section3_code.R", echo=TRUE)
source("~/ai-project/section3_code.R", echo=TRUE)
source("~/ai-project/section3_code.R", echo=TRUE)
source("~/ai-project/section3_code.R", echo=TRUE)
source("~/ai-project/section3_code.R", echo=TRUE)
source("~/ai-project/section3_code.R", echo=TRUE)
source("~/ai-project/section3_code.R", echo=TRUE)
source("~/ai-project/section3_code.R", echo=TRUE)
source("~/ai-project/section3_code.R", echo=TRUE)
source("~/ai-project/section3_code.R", echo=TRUE)
source("~/ai-project/section3_code.R", echo=TRUE)
source("~/ai-project/section3_code.R", echo=TRUE)
source("~/ai-project/section3_code.R", echo=TRUE)
source("~/ai-project/section3_code.R", echo=TRUE)
source("~/ai-project/section3_code.R", echo=TRUE)
source("~/ai-project/section3_code.R", echo=TRUE)
source("~/ai-project/section3_code.R", echo=TRUE)
source("~/ai-project/section3_code.R", echo=TRUE)
source("~/ai-project/section3_code.R", echo=TRUE)
source("~/ai-project/section3_code.R", echo=TRUE)
source("~/ai-project/section3_code.R", echo=TRUE)
source("~/ai-project/section3_code.R", echo=TRUE)
source("~/ai-project/section3_code.R", echo=TRUE)
source("~/ai-project/section3_code.R", echo=TRUE)
source("~/ai-project/section3_code.R", echo=TRUE)
source("~/ai-project/section3_code.R", echo=TRUE)
source("~/ai-project/section3_code.R", echo=TRUE)
source("~/ai-project/section3_code.R", echo=TRUE)
source("~/ai-project/section3_code.R", echo=TRUE)
source("~/ai-project/section3_code.R", echo=TRUE)
source("~/ai-project/section3_code.R", echo=TRUE)
source("~/ai-project/section3_code.R", echo=TRUE)
source("~/ai-project/section3_code.R", echo=TRUE)
source("~/ai-project/section3_code.R", echo=TRUE)
source("~/ai-project/section3_code.R", echo=TRUE)
source("~/ai-project/section3_code.R", echo=TRUE)
source("~/ai-project/section3_code.R", echo=TRUE)
source("~/ai-project/section3_code.R", echo=TRUE)
source("~/ai-project/section3_code.R", echo=TRUE)
source("~/ai-project/section3_code.R", echo=TRUE)
source("~/ai-project/section3_code.R", echo=TRUE)
source("~/ai-project/section3_code.R", echo=TRUE)
source("~/ai-project/section3_code.R", echo=TRUE)
source("~/ai-project/section3_code.R", echo=TRUE)
source("~/ai-project/section3_code.R", echo=TRUE)
source("~/ai-project/section3_code.R", echo=TRUE)
source("~/ai-project/section3_code.R", echo=TRUE)
comparison2 <- colnames(cor_df[column[1]])
source("~/ai-project/section3_code.R", echo=TRUE)
source("~/ai-project/section3_code.R", echo=TRUE)
source("~/ai-project/section3_code.R", echo=TRUE)
source("~/ai-project/section3_code.R", echo=TRUE)
source("~/ai-project/section3_code.R", echo=TRUE)
source("~/ai-project/section3_code.R", echo=TRUE)
source("~/ai-project/section3_code.R", echo=TRUE)
source("~/ai-project/section3_code.R", echo=TRUE)
source("~/ai-project/section3_code.R", echo=TRUE)
source("~/ai-project/section3_code.R", echo=TRUE)
source("~/ai-project/section3_code.R", echo=TRUE)
source("~/ai-project/section3_code.R", echo=TRUE)
source("~/ai-project/section3_code.R", echo=TRUE)
source("~/ai-project/section3_code.R", echo=TRUE)
source("~/ai-project/section3_code.R", echo=TRUE)
source("~/ai-project/section3_code.R", echo=TRUE)
source("~/ai-project/section3_code.R", echo=TRUE)
source("~/ai-project/section3_code.R", echo=TRUE)
source("~/ai-project/section3_code.R", echo=TRUE)
source("~/ai-project/section3_code.R", echo=TRUE)
source("~/ai-project/section3_code.R", echo=TRUE)
source("~/ai-project/section3_code.R", echo=TRUE)
source("~/ai-project/section3_code.R", echo=TRUE)
source("~/ai-project/section3_code.R", echo=TRUE)
source("~/ai-project/section3_code.R", echo=TRUE)
source("~/ai-project/section3_code.R", echo=TRUE)
source("~/ai-project/section3_code.R", echo=TRUE)
source("~/ai-project/section3_code.R", echo=TRUE)
source("~/ai-project/section3_code.R", echo=TRUE)
source("~/ai-project/section3_code.R", echo=TRUE)
source("~/ai-project/section3_code.R", echo=TRUE)
source("~/ai-project/section3_code.R", echo=TRUE)
source("~/ai-project/section3_code.R", echo=TRUE)
source("~/ai-project/section3_code.R", echo=TRUE)
source("~/ai-project/section3_code.R", echo=TRUE)
source("~/ai-project/section3_code.R", echo=TRUE)
source("~/ai-project/section3_code.R", echo=TRUE)
source("~/ai-project/section3_code.R", echo=TRUE)
source("~/ai-project/section3_code.R", echo=TRUE)
source("~/ai-project/section3_code.R", echo=TRUE)
source("~/ai-project/section3_code.R", echo=TRUE)
source("~/ai-project/section3_code.R", echo=TRUE)
source("~/ai-project/section3_code.R", echo=TRUE)
source("~/ai-project/section3_code.R", echo=TRUE)
source("~/ai-project/section3_code.R", echo=TRUE)
source("~/ai-project/section3_code.R", echo=TRUE)
source("~/ai-project/section3_code.R", echo=TRUE)
source("~/ai-project/section3_code.R", echo=TRUE)
source("~/ai-project/section3_code.R", echo=TRUE)
source("~/ai-project/section3_code.R", echo=TRUE)
source("~/ai-project/section3_code.R", echo=TRUE)
source("~/ai-project/section3_code.R", echo=TRUE)
source("~/ai-project/section3_code.R", echo=TRUE)
source("~/ai-project/section3_code.R", echo=TRUE)
source("~/ai-project/section3_code.R", echo=TRUE)
source("~/ai-project/section3_code.R", echo=TRUE)
source("~/ai-project/section3_code.R", echo=TRUE)
source("~/ai-project/section3_code.R", echo=TRUE)
source("~/ai-project/section3_code.R", echo=TRUE)
source("~/ai-project/section3_code.R", echo=TRUE)
source("~/ai-project/section3_code.R", echo=TRUE)
source("~/ai-project/section3_code.R", echo=TRUE)
source("~/ai-project/section3_code.R", echo=TRUE)
source("~/ai-project/section3_code.R", echo=TRUE)
source("~/ai-project/section3_code.R", echo=TRUE)
source("~/ai-project/section3_code.R", echo=TRUE)
source("~/ai-project/section3_code.R", echo=TRUE)
source("~/ai-project/section3_code.R", echo=TRUE)
source("~/ai-project/section3_code.R", echo=TRUE)
source("~/ai-project/section3_code.R", echo=TRUE)
source("~/ai-project/section3_code.R", echo=TRUE)
source("~/ai-project/section3_code.R", echo=TRUE)
source("~/ai-project/section3_code.R", echo=TRUE)
source("~/ai-project/section3_code.R", echo=TRUE)
source("~/ai-project/section3_code.R", echo=TRUE)
source("~/ai-project/section3_code.R", echo=TRUE)
source("~/ai-project/section3_code.R", echo=TRUE)
source("~/ai-project/section3_code.R", echo=TRUE)
source("~/ai-project/section3_code.R", echo=TRUE)
source("~/ai-project/section3_code.R", echo=TRUE)
source("~/ai-project/section3_code.R", echo=TRUE)
source("~/ai-project/section3_code.R", echo=TRUE)
source("~/ai-project/section3_code.R", echo=TRUE)
source("~/ai-project/section3_code.R", echo=TRUE)
source("~/ai-project/section3_code.R", echo=TRUE)
source("~/ai-project/section3_code.R", echo=TRUE)
source("~/ai-project/section3_code.R", echo=TRUE)
source("~/ai-project/section3_code.R", echo=TRUE)
source("~/ai-project/section3_code.R", echo=TRUE)
source("~/ai-project/section3_code.R", echo=TRUE)
source("~/ai-project/section3_code.R", echo=TRUE)
source("~/ai-project/section3_code.R", echo=TRUE)
source("~/ai-project/section3_code.R", echo=TRUE)
source("~/ai-project/section3_code.R", echo=TRUE)
source("~/ai-project/section3_code.R", echo=TRUE)
source("~/ai-project/section3_code.R", echo=TRUE)
source("~/ai-project/section3_code.R", echo=TRUE)
source("~/ai-project/section3_code.R", echo=TRUE)
source("~/ai-project/section3_code.R", echo=TRUE)
source("~/ai-project/section3_code.R", echo=TRUE)
source("~/ai-project/section3_code.R", echo=TRUE)
source("~/ai-project/section3_code.R", echo=TRUE)
source("~/ai-project/section4_code.R", echo=TRUE)
source("~/ai-project/section3_code.R", echo=TRUE)
source("~/ai-project/section3_code.R", echo=TRUE)
source("~/ai-project/section3_code.R", echo=TRUE)
source("~/ai-project/section3_code.R", echo=TRUE)
source("~/ai-project/section3_code.R", echo=TRUE)
source("~/ai-project/section3_code.R", echo=TRUE)
source("~/ai-project/section3_code.R", echo=TRUE)
source("~/ai-project/section3_code.R", echo=TRUE)
source("~/ai-project/section3_code.R", echo=TRUE)
source("~/ai-project/section4_code.R", echo=TRUE)
source("~/ai-project/section4_code.R", echo=TRUE)
source("~/ai-project/section4_code.R", echo=TRUE)
source("~/ai-project/section4_code.R", echo=TRUE)
source("~/ai-project/section4_code.R", echo=TRUE)
source("~/ai-project/section4_code.R", echo=TRUE)
source("~/ai-project/section4_code.R", echo=TRUE)
source("~/ai-project/section4_code.R", echo=TRUE)
source("~/ai-project/section4_code.R", echo=TRUE)
source("~/ai-project/section4_code.R", echo=TRUE)
source("~/ai-project/section4_code.R", echo=TRUE)
source("~/ai-project/section4_code.R", echo=TRUE)
source("~/ai-project/section4_code.R", echo=TRUE)
source("~/ai-project/section4_code.R", echo=TRUE)
source("~/ai-project/section4_code.R", echo=TRUE)
source("~/ai-project/section4_code.R", echo=TRUE)
source("~/ai-project/section4_code.R", echo=TRUE)
source("~/ai-project/section4_code.R", echo=TRUE)
source("~/ai-project/section4_code.R", echo=TRUE)
source("~/ai-project/section4_code.R", echo=TRUE)
source("~/ai-project/section4_code.R", echo=TRUE)
source("~/ai-project/section4_code.R", echo=TRUE)
source("~/ai-project/section4_code.R", echo=TRUE)
source("~/ai-project/section4_code.R", echo=TRUE)
source("~/ai-project/section4_code.R", echo=TRUE)
source("~/ai-project/section4_code.R", echo=TRUE)
source("~/ai-project/section4_code.R", echo=TRUE)
source("~/ai-project/section4_code.R", echo=TRUE)
source("~/ai-project/section4_code.R", echo=TRUE)
source("~/ai-project/section4_code.R", echo=TRUE)
source("~/ai-project/section4_code.R", echo=TRUE)
source("~/ai-project/section4_code.R", echo=TRUE)
source("~/ai-project/section4_code.R", echo=TRUE)
source("~/ai-project/section4_code.R", echo=TRUE)
source("~/ai-project/section4_code.R", echo=TRUE)
source("~/ai-project/section4_code.R", echo=TRUE)
source("~/ai-project/section4_code.R", echo=TRUE)
source("~/ai-project/section4_code.R", echo=TRUE)
source("~/ai-project/section4_code.R", echo=TRUE)
source("~/ai-project/section4_code.R", echo=TRUE)
source("~/ai-project/section4_code.R", echo=TRUE)
source("~/ai-project/section4_code.R", echo=TRUE)
source("~/ai-project/section4_code.R", echo=TRUE)
source("~/ai-project/section4_code.R", echo=TRUE)
source("~/ai-project/section4_code.R", echo=TRUE)
source("~/ai-project/section3_code.R", echo=TRUE)
source("~/ai-project/section3_code.R", echo=TRUE)
source("~/ai-project/section4_code.R", echo=TRUE)
source("~/ai-project/section4_code.R", echo=TRUE)
source("~/ai-project/section4_code.R", echo=TRUE)
source("~/ai-project/section4_code.R", echo=TRUE)
summary(model)
lm(aspect_ratio ~ custom +no_neigh_above + no_neigh_below, data = calculated_features)
source("~/ai-project/section4_code.R", echo=TRUE)
source("~/ai-project/section4_code.R", echo=TRUE)
model <- lm(formula = aspect_ratio ~ custom +no_neigh_above + no_neigh_below, data = calculated_features)
print(model)
source("~/ai-project/section4_code.R", echo=TRUE)
source("~/ai-project/section4_code.R", echo=TRUE)
source("~/ai-project/section4_code.R", echo=TRUE)
source("~/ai-project/section4_code.R", echo=TRUE)
source("~/ai-project/section4_code.R", echo=TRUE)
source("~/ai-project/section4_code.R", echo=TRUE)
source("~/ai-project/section4_code.R", echo=TRUE)
source("~/ai-project/section4_code.R", echo=TRUE)
source("~/ai-project/section4_code.R", echo=TRUE)
source("~/ai-project/section4_code.R", echo=TRUE)
source("~/ai-project/section4_code.R", echo=TRUE)
source("~/ai-project/section4_code.R", echo=TRUE)
source("~/ai-project/section4_code.R", echo=TRUE)
source("~/ai-project/section4_code.R", echo=TRUE)
source("~/ai-project/section4_code.R", echo=TRUE)
source("~/ai-project/section4_code.R", echo=TRUE)
source("~/ai-project/section4_code.R", echo=TRUE)
source("~/ai-project/section4_code.R", echo=TRUE)
source("~/ai-project/section4_code.R", echo=TRUE)
source("~/ai-project/section4_code.R", echo=TRUE)
source("~/ai-project/section4_code.R", echo=TRUE)
source("~/ai-project/section4_code.R", echo=TRUE)
source("~/ai-project/section4_code.R", echo=TRUE)
source("~/ai-project/section4_code.R", echo=TRUE)
source("~/ai-project/section4_code.R", echo=TRUE)
source("~/ai-project/section4_code.R", echo=TRUE)
source("~/ai-project/section4_code.R", echo=TRUE)
source("~/ai-project/section4_code.R", echo=TRUE)
source("~/ai-project/section4_code.R", echo=TRUE)
source("~/ai-project/section4_code.R", echo=TRUE)
source("~/ai-project/section4_code.R", echo=TRUE)
source("~/ai-project/section4_code.R", echo=TRUE)
source("~/ai-project/section4_code.R", echo=TRUE)
source("~/ai-project/section2_code.R", echo=TRUE)
source("~/ai-project/section2_code.R", echo=TRUE)
source("~/ai-project/section3_code.R", echo=TRUE)
source("~/ai-project/section4_code.R", echo=TRUE)
source("~/ai-project/section4_code.R", echo=TRUE)
source("~/ai-project/section4_code.R", echo=TRUE)
source("~/ai-project/section4_code.R", echo=TRUE)
source("~/ai-project/section4_code.R", echo=TRUE)
source("~/ai-project/section4_code.R", echo=TRUE)
source("~/ai-project/section4_code.R", echo=TRUE)
source("~/ai-project/section4_code.R", echo=TRUE)
source("~/ai-project/section4_code.R", echo=TRUE)
source("~/ai-project/section4_code.R", echo=TRUE)
source("~/ai-project/section4_code.R", echo=TRUE)
source("~/ai-project/section4_code.R", echo=TRUE)
source("~/ai-project/section4_code.R", echo=TRUE)
source("~/ai-project/section4_code.R", echo=TRUE)
source("~/ai-project/section4_code.R", echo=TRUE)
source("~/ai-project/section4_code.R", echo=TRUE)
source("~/ai-project/section4_code.R", echo=TRUE)
source("~/ai-project/section4_code.R", echo=TRUE)
source("~/ai-project/section4_code.R", echo=TRUE)
source("~/ai-project/section4_code.R", echo=TRUE)
source("~/ai-project/section4_code.R", echo=TRUE)
source("~/ai-project/section4_code.R", echo=TRUE)
source("~/ai-project/section4_code.R", echo=TRUE)
source("~/ai-project/section4_code.R", echo=TRUE)
source("~/ai-project/section4_code.R", echo=TRUE)
source("~/ai-project/section4_code.R", echo=TRUE)
source("~/ai-project/section4_code.R", echo=TRUE)
source("~/ai-project/section4_code.R", echo=TRUE)
source("~/ai-project/section4_code.R", echo=TRUE)
source("~/ai-project/section4_code.R", echo=TRUE)
source("~/ai-project/section4_code.R", echo=TRUE)
source("~/ai-project/section4_code.R", echo=TRUE)
source("~/ai-project/section4_code.R", echo=TRUE)
source("~/ai-project/section4_code.R", echo=TRUE)
source("~/ai-project/section4_code.R", echo=TRUE)
source("~/ai-project/section4_code.R", echo=TRUE)
source("~/ai-project/section4_code.R", echo=TRUE)
source("~/ai-project/section4_code.R", echo=TRUE)
source("~/ai-project/section4_code.R", echo=TRUE)
source("~/ai-project/section4_code.R", echo=TRUE)
source("~/ai-project/section4_code.R", echo=TRUE)
source("~/ai-project/section4_code.R", echo=TRUE)
source("~/ai-project/section4_code.R", echo=TRUE)
print(letter_splits_medians)
source("~/ai-project/section4_code.R", echo=TRUE)
source("~/ai-project/section4_code.R", echo=TRUE)
source("~/ai-project/section4_code.R", echo=TRUE)
source("~/ai-project/section4_code.R", echo=TRUE)
source("~/ai-project/section4_code.R", echo=TRUE)
source("~/ai-project/section4_code.R", echo=TRUE)
source("~/ai-project/section4_code.R", echo=TRUE)
source("~/ai-project/section4_code.R", echo=TRUE)
source("~/ai-project/section4_code.R", echo=TRUE)
source("~/ai-project/section4_code.R", echo=TRUE)
source("~/ai-project/section4_code.R", echo=TRUE)
source("~/ai-project/section4_code.R", echo=TRUE)
source("~/ai-project/section4_code.R", echo=TRUE)
source("~/ai-project/section4_code.R", echo=TRUE)
source("~/ai-project/section4_code.R", echo=TRUE)
source("~/ai-project/section4_code.R", echo=TRUE)
source("~/ai-project/section4_code.R", echo=TRUE)
source("~/ai-project/section4_code.R", echo=TRUE)
source("~/ai-project/section4_code.R", echo=TRUE)
source("~/ai-project/section4_code.R", echo=TRUE)
source("~/ai-project/section4_code.R", echo=TRUE)
source("~/ai-project/section4_code.R", echo=TRUE)
source("~/ai-project/section4_code.R", echo=TRUE)
source("~/ai-project/section4_code.R", echo=TRUE)
source("~/ai-project/section4_code.R", echo=TRUE)
source("~/ai-project/section4_code.R", echo=TRUE)
source("~/ai-project/section4_code.R", echo=TRUE)
source("~/ai-project/section4_code.R", echo=TRUE)
source("~/ai-project/section4_code.R", echo=TRUE)
source("~/ai-project/section4_code.R", echo=TRUE)
source("~/ai-project/section4_code.R", echo=TRUE)
prediction <- lm(letter_non_letter ~ no_neigh_above - no_neigh_below,data = calculated_features)
source("~/ai-project/section4_code.R", echo=TRUE)
source("~/ai-project/section4_code.R", echo=TRUE)
source("~/ai-project/section4_code.R", echo=TRUE)
source("~/ai-project/section4_code.R", echo=TRUE)
source("~/ai-project/section4_code.R", echo=TRUE)
source("~/ai-project/section4_code.R", echo=TRUE)
source("~/ai-project/section4_code.R", echo=TRUE)
source("~/ai-project/section4_code.R", echo=TRUE)
source("~/ai-project/section4_code.R", echo=TRUE)
source("~/ai-project/section4_code.R", echo=TRUE)
source("~/ai-project/section4_code.R", echo=TRUE)
source("~/ai-project/section4_code.R", echo=TRUE)
source("~/ai-project/section4_code.R", echo=TRUE)
source("~/ai-project/section4_code.R", echo=TRUE)
source("~/ai-project/section4_code.R", echo=TRUE)
source("~/ai-project/section4_code.R", echo=TRUE)
source("~/ai-project/section4_code.R", echo=TRUE)
source("~/ai-project/section4_code.R", echo=TRUE)
source("~/ai-project/section4_code.R", echo=TRUE)
source("~/ai-project/section4_code.R", echo=TRUE)
source("~/ai-project/section4_code.R", echo=TRUE)
source("~/ai-project/section4_code.R", echo=TRUE)
source("~/ai-project/section4_code.R", echo=TRUE)
source("~/ai-project/section4_code.R", echo=TRUE)
source("~/ai-project/section4_code.R", echo=TRUE)
source("~/ai-project/section4_code.R", echo=TRUE)
source("~/ai-project/section4_code.R", echo=TRUE)
source("~/ai-project/section4_code.R", echo=TRUE)
source("~/ai-project/section4_code.R", echo=TRUE)
source("~/ai-project/section4_code.R", echo=TRUE)
source("~/ai-project/section4_code.R", echo=TRUE)
source("~/ai-project/section4_code.R", echo=TRUE)
source("~/ai-project/section4_code.R", echo=TRUE)
source("~/ai-project/section4_code.R", echo=TRUE)
source("~/ai-project/section4_code.R", echo=TRUE)
source("~/ai-project/section4_code.R", echo=TRUE)
source("~/ai-project/section4_code.R", echo=TRUE)
source("~/ai-project/section4_code.R", echo=TRUE)
source("~/ai-project/section4_code.R", echo=TRUE)
source("~/ai-project/section4_code.R", echo=TRUE)
source("~/ai-project/section4_code.R", echo=TRUE)
{
library(readr)
library(ggplot2)
# matrix stats has functions for getting colMedian and standard deviation
library(matrixStats)
library(knitr) # using this to make a table for my report.
mydata <- read.csv("40294886_features.csv", row.names = NULL)
calculated_features <- data.frame(mydata)
colnames(calculated_features) <- c("Label", "Index", "nr_pix", "rows_with_1", "cols_with_1",
"rows_with_3p", "cols_with_3p", "aspect_ratio", "neigh_1",
"no_neigh_above","no_neigh_below","no_neigh_left","no_neigh_right",
"no_neigh_horiz", "no_neigh_vert","connected_areas","eyes","custom")
mydata[ , 3:18] <- as.numeric(mydata[ , 3,18])
# 3.2
letters_calculated_features <- calculated_features[1:80,]
non_letters_calculated_features<- calculated_features[81:140,]
letters_calculated_features[, 18] <- as.numeric(letters_calculated_features[ , 18])
non_letters_calculated_features[ , 18] <- as.numeric(non_letters_calculated_features[ , 18])
# # get the mean of each column
letters_mean <- c(colMeans(letters_calculated_features[ , 3:18]))
non_letters_mean <- c(colMeans(non_letters_calculated_features[ , 3:18]))
# get the medians of each column
letters_median <- c(colMedians(as.matrix(letters_calculated_features[ , 3:18])))
non_letters_median <- c(colMedians(as.matrix(non_letters_calculated_features[ , 3:18])))
#get the standard deviation of each column
letters_sd <- colSds(as.matrix(letters_calculated_features[, 3:18][sapply(letters_calculated_features[ , 3:18 ], is.numeric)]))
non_letters_sd <- colSds(as.matrix(non_letters_calculated_features[ , 3:18][sapply(non_letters_calculated_features[ , 3:18], is.numeric)]))
# printing tables containing the results for standard_deviation, mean, median for both letters and
# non letters.
# source for making tables: https://www.youtube.com/watch?v=hNgeVLotABg
table = matrix(NA, nrow = 16, ncol = 0)
rownames(table) = c("nr_pix", "rows_with_1", "cols_with_1",
"rows_with_3p", "cols_with_3p", "aspect_ratio", "neigh_1",
"no_neigh_above","no_neigh_below","no_neigh_left","no_neigh_right",
"no_neigh_horiz", "no_neigh_vert","connected_areas","eyes","custom")
table <- cbind(table, letters_mean)
table <- cbind(table, non_letters_mean)
table <- cbind(table, letters_median)
table <- cbind(table, non_letters_median)
table <- cbind(table, letters_sd)
table <- cbind(table, non_letters_sd)
features_table<-kable(table, caption = "This table shows the letter and non letters mean, median and standard deviation for each of the feature calculations")
print(features_table)
# box plot for comparing all the summary data, to show in report
summary_boxplot <- boxplot(letters_mean, non_letters_mean, letters_median, non_letters_median, letters_sd, non_letters_sd,
main = "summary data comparisons",
at = c(1,2,3,4,5,6),
names = c("letter mean", "non letter mean", "letters median", "non letters median", "letters standard deviation", "non letters standard deviation"),
las = 2,
col = c("orange","red"),
border = "brown",
horizontal = TRUE,
notch = FALSE
)
}
{
library(readr)
library(ggplot2)
# matrix stats has functions for getting colMedian and standard deviation
library(matrixStats)
library(knitr) # using this to make a table for my report.
mydata <- read.csv("40294886_features.csv", row.names = NULL)
calculated_features <- data.frame(mydata)
colnames(calculated_features) <- c("Label", "Index", "nr_pix", "rows_with_1", "cols_with_1",
"rows_with_3p", "cols_with_3p", "aspect_ratio", "neigh_1",
"no_neigh_above","no_neigh_below","no_neigh_left","no_neigh_right",
"no_neigh_horiz", "no_neigh_vert","connected_areas","eyes","custom")
mydata[ , 3:18] <- as.numeric(mydata[ , 3,18])
# 3.2
letters_calculated_features <- calculated_features[1:80,]
non_letters_calculated_features<- calculated_features[81:140,]
letters_calculated_features[, 18] <- as.numeric(letters_calculated_features[ , 18])
non_letters_calculated_features[ , 18] <- as.numeric(non_letters_calculated_features[ , 18])
# # get the mean of each column
letters_mean <- c(colMeans(letters_calculated_features[ , 3:18]))
non_letters_mean <- c(colMeans(non_letters_calculated_features[ , 3:18]))
# get the medians of each column
letters_median <- c(colMedians(as.matrix(letters_calculated_features[ , 3:18])))
non_letters_median <- c(colMedians(as.matrix(non_letters_calculated_features[ , 3:18])))
#get the standard deviation of each column
letters_sd <- colSds(as.matrix(letters_calculated_features[, 3:18][sapply(letters_calculated_features[ , 3:18 ], is.numeric)]))
non_letters_sd <- colSds(as.matrix(non_letters_calculated_features[ , 3:18][sapply(non_letters_calculated_features[ , 3:18], is.numeric)]))
# printing tables containing the results for standard_deviation, mean, median for both letters and
# non letters.
# source for making tables: https://www.youtube.com/watch?v=hNgeVLotABg
table = matrix(NA, nrow = 16, ncol = 0)
rownames(table) = c("nr_pix", "rows_with_1", "cols_with_1",
"rows_with_3p", "cols_with_3p", "aspect_ratio", "neigh_1",
"no_neigh_above","no_neigh_below","no_neigh_left","no_neigh_right",
"no_neigh_horiz", "no_neigh_vert","connected_areas","eyes","custom")
table <- cbind(table, letters_mean)
table <- cbind(table, non_letters_mean)
table <- cbind(table, letters_median)
table <- cbind(table, non_letters_median)
table <- cbind(table, letters_sd)
table <- cbind(table, non_letters_sd)
features_table<-kable(table, caption = "This table shows the letter and non letters mean, median and standard deviation for each of the feature calculations")
print(features_table)
# box plot for comparing all the summary data, to show in report
summary_boxplot <- boxplot(letters_mean, non_letters_mean, letters_median, non_letters_median, letters_sd, non_letters_sd,
main = "summary data comparisons",
at = c(1,2,3,4,5,6),
names = c("letter mean", "non letter mean", "letters median", "non letters median", "letters standard deviation", "non letters standard deviation"),
las = 2,
col = c("orange","red"),
border = "brown",
horizontal = TRUE,
notch = FALSE
)
}
source("~/ai-project/section4_code.R", echo=TRUE)
source("~/ai-project/section4_code.R", echo=TRUE)
