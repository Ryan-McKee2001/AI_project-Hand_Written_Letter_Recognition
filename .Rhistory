#get the standard deviation of each column
letters_sd <- colSds(as.matrix(letters_calculated_features[, 3:18][sapply(letters_calculated_features[ , 3:18 ], is.numeric)]))
non_letters_sd <- colSds(as.matrix(non_letters_calculated_features[ , 3:18][sapply(non_letters_calculated_features[ , 3:18], is.numeric)]))
# printing feature calculations
table = matrix(NA, nrow = 16, ncol = 0)
rownames(table) = c("nr_pix", "rows_with_1", "cols_with_1",
"rows_with_3p", "cols_with_3p", "aspect_ratio", "neigh_1",
"no_neigh_above","no_neigh_below","no_neigh_left","no_neigh_right",
"no_neigh_horiz", "no_neigh_vert","connected_areas","eyes","custom")
table <- cbind(table, letters_mean)
table <- cbind(table, non_letters_mean)
table <- cbind(table, letters_median)
table <- cbind(table, non_letters_median)
table <- cbind(table, letters_sd)
table <- cbind(table, non_letters_sd)
features_table<-kable(table, caption = "This table shows the letter and non letters mean, median and standard deviation for each of the feature calculations")
print(features_table)
}
{
library(readr)
library(ggplot2)
# matrix stats has functions for getting colMedian and standard deviation
library(matrixStats)
library(knitr) # using this to make a table for my report.
mydata <- read.csv("40294886_features.csv", row.names = NULL)
calculated_features <- data.frame(mydata)
colnames(calculated_features) <- c("Label", "Index", "nr_pix", "rows_with_1", "cols_with_1",
"rows_with_3p", "cols_with_3p", "aspect_ratio", "neigh_1",
"no_neigh_above","no_neigh_below","no_neigh_left","no_neigh_right",
"no_neigh_horiz", "no_neigh_vert","connected_areas","eyes","custom")
mydata[ , 3:18] <- as.numeric(mydata[ , 3,18])
# 3.2 code
# creating over lappting bar charts for the 3 features That appear to stand out
code_3_2(calculated_features)
code_3_2 <- function(calculated_features){
stats_df <- get_stats(calculated_features)
mean_stats_hist(stats_df)
median_stats_hist(stats_df)
standard_deviation_stats_hist(stats_df)
}
# this function calculated mean, median and standard deviation for each of the features
# then returns a dataframe containing each of these
get_stats <- function(calculated_features){
letters_calculated_features <- calculated_features[1:80,]
non_letters_calculated_features<- calculated_features[81:140,]
letters_calculated_features[, 18] <- as.numeric(letters_calculated_features[ , 18])
non_letters_calculated_features[ , 18] <- as.numeric(non_letters_calculated_features[ , 18])
# # get the mean of each column
letters_mean <- c(colMeans(letters_calculated_features[ , 3:18]))
non_letters_mean <- c(colMeans(non_letters_calculated_features[ , 3:18]))
# get the medians of each column
letters_median <- c(colMedians(as.matrix(letters_calculated_features[ , 3:18])))
non_letters_median <- c(colMedians(as.matrix(non_letters_calculated_features[ , 3:18])))
#get the standard deviation of each column
letters_sd <- colSds(as.matrix(letters_calculated_features[, 3:18][sapply(letters_calculated_features[ , 3:18 ], is.numeric)]))
non_letters_sd <- colSds(as.matrix(non_letters_calculated_features[ , 3:18][sapply(non_letters_calculated_features[ , 3:18], is.numeric)]))
stats_df<-data.frame(letters_mean, non_letters_mean, letters_median, non_letters_median, letters_sd, non_letters_sd)
return(stats_df)
}
# this function prints out a grouped bar plot for each of the features stat values
mean_stats_hist <- function(stats_df){
mean_df <- data.frame(stats_df[, 1], stats_df[, 2])
colnames(mean_df) <- c("letters", "non_letters")
rownames(mean_df) <- c("nr_pix", "rows_with_1", "cols_with_1",
"rows_with_3p", "cols_with_3p", "aspect_ratio", "neigh_1",
"no_neigh_above","no_neigh_below","no_neigh_left","no_neigh_right",
"no_neigh_horiz", "no_neigh_vert","connected_areas","eyes","custom")
mean_df <- data.frame(feature = row.names(mean_df), mean_df)
mean_df <- tidyr::pivot_longer(mean_df, cols=c('letters', 'non_letters'), names_to='Symbols',values_to="Mean")
mean_hist <- ggplot(mean_df, aes(x=feature, y=Mean, fill=Symbols))+
theme_bw() +
geom_bar(stat='identity', position='dodge') +
ggtitle("Difference between letter and non letter means") +  xlab("Calculated features") +
scale_x_discrete(limits=stats_df$names)
plot(mean_hist)
}
median_stats_hist <- function(stats_df){
median_df <- data.frame(stats_df[, 3], stats_df[, 4])
colnames(median_df) <- c("letters", "non_letters")
rownames(median_df) <- c("nr_pix", "rows_with_1", "cols_with_1",
"rows_with_3p", "cols_with_3p", "aspect_ratio", "neigh_1",
"no_neigh_above","no_neigh_below","no_neigh_left","no_neigh_right",
"no_neigh_horiz", "no_neigh_vert","connected_areas","eyes","custom")
median_df <- data.frame(feature = row.names(median_df), median_df)
median_df <- tidyr::pivot_longer(median_df, cols=c('letters', 'non_letters'), names_to='Symbols',values_to="Median")
print(median_df)
median_hist <- ggplot(median_df, aes(x=feature, y=Median, fill=Symbols))+
theme_bw() +
geom_bar(stat='identity', position='dodge') +
ggtitle("Difference between letter and non letter medians") +  xlab("Calculated features") +
scale_x_discrete(limits=stats_df$names)
plot(median_hist)
}
standard_deviation_stats_hist <- function(stats_df){
sd_df <- data.frame(stats_df[, 3], stats_df[, 4])
colnames(sd_df) <- c("letters", "non_letters")
rownames(sd_df) <- c("nr_pix", "rows_with_1", "cols_with_1",
"rows_with_3p", "cols_with_3p", "aspect_ratio", "neigh_1",
"no_neigh_above","no_neigh_below","no_neigh_left","no_neigh_right",
"no_neigh_horiz", "no_neigh_vert","connected_areas","eyes","custom")
sd_df <- data.frame(feature = row.names(sd_df), sd_df)
sd_df <- tidyr::pivot_longer(sd_df, cols=c('letters', 'non_letters'), names_to='Symbols',values_to="Standard deviation")
print(sd_df)
sd_hist <- ggplot(sd_df, aes(x=feature, y=`Standard deviation`, fill=Symbols))+
theme_bw() +
geom_bar(stat='identity', position='dodge') +
ggtitle("Difference between letter and non letter standard deviation") +  xlab("Calculated features") +
scale_x_discrete(limits=stats_df$names)
plot(sd_hist)
}
{
library(readr)
library(ggplot2)
# matrix stats has functions for getting colMedian and standard deviation
library(matrixStats)
library(knitr) # using this to make a table for my report.
mydata <- read.csv("40294886_features.csv", row.names = NULL)
calculated_features <- data.frame(mydata)
colnames(calculated_features) <- c("Label", "Index", "nr_pix", "rows_with_1", "cols_with_1",
"rows_with_3p", "cols_with_3p", "aspect_ratio", "neigh_1",
"no_neigh_above","no_neigh_below","no_neigh_left","no_neigh_right",
"no_neigh_horiz", "no_neigh_vert","connected_areas","eyes","custom")
mydata[ , 3:18] <- as.numeric(mydata[ , 3,18])
# 3.2 code
# creating over lappting bar charts for the 3 features That appear to stand out
code_3_2(calculated_features)
code_3_2 <- function(calculated_features){
stats_df <- get_stats(calculated_features)
mean_stats_hist(stats_df)
median_stats_hist(stats_df)
standard_deviation_stats_hist(stats_df)
}
# this function calculated mean, median and standard deviation for each of the features
# then returns a dataframe containing each of these
get_stats <- function(calculated_features){
letters_calculated_features <- calculated_features[1:80,]
non_letters_calculated_features<- calculated_features[81:140,]
letters_calculated_features[, 18] <- as.numeric(letters_calculated_features[ , 18])
non_letters_calculated_features[ , 18] <- as.numeric(non_letters_calculated_features[ , 18])
# # get the mean of each column
letters_mean <- c(colMeans(letters_calculated_features[ , 3:18]))
non_letters_mean <- c(colMeans(non_letters_calculated_features[ , 3:18]))
# get the medians of each column
letters_median <- c(colMedians(as.matrix(letters_calculated_features[ , 3:18])))
non_letters_median <- c(colMedians(as.matrix(non_letters_calculated_features[ , 3:18])))
#get the standard deviation of each column
letters_sd <- colSds(as.matrix(letters_calculated_features[, 3:18][sapply(letters_calculated_features[ , 3:18 ], is.numeric)]))
non_letters_sd <- colSds(as.matrix(non_letters_calculated_features[ , 3:18][sapply(non_letters_calculated_features[ , 3:18], is.numeric)]))
stats_df<-data.frame(letters_mean, non_letters_mean, letters_median, non_letters_median, letters_sd, non_letters_sd)
return(stats_df)
}
# this function prints out a grouped bar plot for each of the features stat values
mean_stats_hist <- function(stats_df){
mean_df <- data.frame(stats_df[, 1], stats_df[, 2])
colnames(mean_df) <- c("letters", "non_letters")
rownames(mean_df) <- c("nr_pix", "rows_with_1", "cols_with_1",
"rows_with_3p", "cols_with_3p", "aspect_ratio", "neigh_1",
"no_neigh_above","no_neigh_below","no_neigh_left","no_neigh_right",
"no_neigh_horiz", "no_neigh_vert","connected_areas","eyes","custom")
mean_df <- data.frame(feature = row.names(mean_df), mean_df)
mean_df <- tidyr::pivot_longer(mean_df, cols=c('letters', 'non_letters'), names_to='Symbols',values_to="Mean")
mean_hist <- ggplot(mean_df, aes(x=feature, y=Mean, fill=Symbols))+
theme_bw() +
geom_bar(stat='identity', position='dodge') +
ggtitle("Difference between letter and non letter means") +  xlab("Calculated features") +
scale_x_discrete(limits=stats_df$names)
plot(mean_hist)
}
median_stats_hist <- function(stats_df){
median_df <- data.frame(stats_df[, 3], stats_df[, 4])
colnames(median_df) <- c("letters", "non_letters")
rownames(median_df) <- c("nr_pix", "rows_with_1", "cols_with_1",
"rows_with_3p", "cols_with_3p", "aspect_ratio", "neigh_1",
"no_neigh_above","no_neigh_below","no_neigh_left","no_neigh_right",
"no_neigh_horiz", "no_neigh_vert","connected_areas","eyes","custom")
median_df <- data.frame(feature = row.names(median_df), median_df)
median_df <- tidyr::pivot_longer(median_df, cols=c('letters', 'non_letters'), names_to='Symbols',values_to="Median")
print(median_df)
median_hist <- ggplot(median_df, aes(x=feature, y=Median, fill=Symbols))+
theme_bw() +
geom_bar(stat='identity', position='dodge') +
ggtitle("Difference between letter and non letter medians") +  xlab("Calculated features") +
scale_x_discrete(limits=stats_df$names)
plot(median_hist)
}
standard_deviation_stats_hist <- function(stats_df){
sd_df <- data.frame(stats_df[, 3], stats_df[, 4])
colnames(sd_df) <- c("letters", "non_letters")
rownames(sd_df) <- c("nr_pix", "rows_with_1", "cols_with_1",
"rows_with_3p", "cols_with_3p", "aspect_ratio", "neigh_1",
"no_neigh_above","no_neigh_below","no_neigh_left","no_neigh_right",
"no_neigh_horiz", "no_neigh_vert","connected_areas","eyes","custom")
sd_df <- data.frame(feature = row.names(sd_df), sd_df)
sd_df <- tidyr::pivot_longer(sd_df, cols=c('letters', 'non_letters'), names_to='Symbols',values_to="Standard deviation")
print(sd_df)
sd_hist <- ggplot(sd_df, aes(x=feature, y=`Standard deviation`, fill=Symbols))+
theme_bw() +
geom_bar(stat='identity', position='dodge') +
ggtitle("Difference between letter and non letter standard deviation") +  xlab("Calculated features") +
scale_x_discrete(limits=stats_df$names)
plot(sd_hist)
}
}
{
library(readr)
library(ggplot2)
# matrix stats has functions for getting colMedian and standard deviation
library(matrixStats)
library(knitr) # using this to make a table for my report.
mydata <- read.csv("40294886_features.csv", row.names = NULL)
calculated_features <- data.frame(mydata)
colnames(calculated_features) <- c("Label", "Index", "nr_pix", "rows_with_1", "cols_with_1",
"rows_with_3p", "cols_with_3p", "aspect_ratio", "neigh_1",
"no_neigh_above","no_neigh_below","no_neigh_left","no_neigh_right",
"no_neigh_horiz", "no_neigh_vert","connected_areas","eyes","custom")
mydata[ , 3:18] <- as.numeric(mydata[ , 3,18])
# 3.2 code
# creating over lappting bar charts for the 3 features That appear to stand out
code_3_2(calculated_features)
code_3_2 <- function(calculated_features){
stats_df <- get_stats(calculated_features)
mean_stats_hist(stats_df)
median_stats_hist(stats_df)
standard_deviation_stats_hist(stats_df)
}
# this function calculated mean, median and standard deviation for each of the features
# then returns a dataframe containing each of these
get_stats <- function(calculated_features){
letters_calculated_features <- calculated_features[1:80,]
non_letters_calculated_features<- calculated_features[81:140,]
letters_calculated_features[, 18] <- as.numeric(letters_calculated_features[ , 18])
non_letters_calculated_features[ , 18] <- as.numeric(non_letters_calculated_features[ , 18])
# # get the mean of each column
letters_mean <- c(colMeans(letters_calculated_features[ , 3:18]))
non_letters_mean <- c(colMeans(non_letters_calculated_features[ , 3:18]))
# get the medians of each column
letters_median <- c(colMedians(as.matrix(letters_calculated_features[ , 3:18])))
non_letters_median <- c(colMedians(as.matrix(non_letters_calculated_features[ , 3:18])))
#get the standard deviation of each column
letters_sd <- colSds(as.matrix(letters_calculated_features[, 3:18][sapply(letters_calculated_features[ , 3:18 ], is.numeric)]))
non_letters_sd <- colSds(as.matrix(non_letters_calculated_features[ , 3:18][sapply(non_letters_calculated_features[ , 3:18], is.numeric)]))
stats_df<-data.frame(letters_mean, non_letters_mean, letters_median, non_letters_median, letters_sd, non_letters_sd)
return(stats_df)
}
# this function prints out a grouped bar plot for each of the features stat values
mean_stats_hist <- function(stats_df){
mean_df <- data.frame(stats_df[, 1], stats_df[, 2])
colnames(mean_df) <- c("letters", "non_letters")
rownames(mean_df) <- c("nr_pix", "rows_with_1", "cols_with_1",
"rows_with_3p", "cols_with_3p", "aspect_ratio", "neigh_1",
"no_neigh_above","no_neigh_below","no_neigh_left","no_neigh_right",
"no_neigh_horiz", "no_neigh_vert","connected_areas","eyes","custom")
mean_df <- data.frame(feature = row.names(mean_df), mean_df)
mean_df <- tidyr::pivot_longer(mean_df, cols=c('letters', 'non_letters'), names_to='Symbols',values_to="Mean")
mean_hist <- ggplot(mean_df, aes(x=feature, y=Mean, fill=Symbols))+
theme_bw() +
geom_bar(stat='identity', position='dodge') +
ggtitle("Difference between letter and non letter means") +  xlab("Calculated features") +
scale_x_discrete(limits=stats_df$names)
plot(mean_hist)
}
median_stats_hist <- function(stats_df){
median_df <- data.frame(stats_df[, 3], stats_df[, 4])
colnames(median_df) <- c("letters", "non_letters")
rownames(median_df) <- c("nr_pix", "rows_with_1", "cols_with_1",
"rows_with_3p", "cols_with_3p", "aspect_ratio", "neigh_1",
"no_neigh_above","no_neigh_below","no_neigh_left","no_neigh_right",
"no_neigh_horiz", "no_neigh_vert","connected_areas","eyes","custom")
median_df <- data.frame(feature = row.names(median_df), median_df)
median_df <- tidyr::pivot_longer(median_df, cols=c('letters', 'non_letters'), names_to='Symbols',values_to="Median")
median_hist <- ggplot(median_df, aes(x=feature, y=Median, fill=Symbols))+
theme_bw() +
geom_bar(stat='identity', position='dodge') +
ggtitle("Difference between letter and non letter medians") +  xlab("Calculated features") +
scale_x_discrete(limits=stats_df$names)
plot(median_hist)
}
standard_deviation_stats_hist <- function(stats_df){
sd_df <- data.frame(stats_df[, 3], stats_df[, 4])
colnames(sd_df) <- c("letters", "non_letters")
rownames(sd_df) <- c("nr_pix", "rows_with_1", "cols_with_1",
"rows_with_3p", "cols_with_3p", "aspect_ratio", "neigh_1",
"no_neigh_above","no_neigh_below","no_neigh_left","no_neigh_right",
"no_neigh_horiz", "no_neigh_vert","connected_areas","eyes","custom")
sd_df <- data.frame(feature = row.names(sd_df), sd_df)
sd_df <- tidyr::pivot_longer(sd_df, cols=c('letters', 'non_letters'), names_to='Symbols',values_to="Standard deviation")
sd_hist <- ggplot(sd_df, aes(x=feature, y=`Standard deviation`, fill=Symbols))+
theme_bw() +
geom_bar(stat='identity', position='dodge') +
ggtitle("Difference between letter and non letter standard deviation") +  xlab("Calculated features") +
scale_x_discrete(limits=stats_df$names)
plot(sd_hist)
}
}
{
library(readr)
library(ggplot2)
# matrix stats has functions for getting colMedian and standard deviation
library(matrixStats)
library(knitr) # using this to make a table for my report.
mydata <- read.csv("40294886_features.csv", row.names = NULL)
calculated_features <- data.frame(mydata)
colnames(calculated_features) <- c("Label", "Index", "nr_pix", "rows_with_1", "cols_with_1",
"rows_with_3p", "cols_with_3p", "aspect_ratio", "neigh_1",
"no_neigh_above","no_neigh_below","no_neigh_left","no_neigh_right",
"no_neigh_horiz", "no_neigh_vert","connected_areas","eyes","custom")
mydata[ , 3:18] <- as.numeric(mydata[ , 3,18])
# 3.2 code
# creating over lappting bar charts for the 3 features That appear to stand out
code_3_2(calculated_features)
code_3_2 <- function(calculated_features){
stats_df <- get_stats(calculated_features)
mean_stats_hist(stats_df)
median_stats_hist(stats_df)
standard_deviation_stats_hist(stats_df)
}
# this function calculated mean, median and standard deviation for each of the features
# then returns a dataframe containing each of these
get_stats <- function(calculated_features){
letters_calculated_features <- calculated_features[1:80,]
non_letters_calculated_features<- calculated_features[81:140,]
letters_calculated_features[, 18] <- as.numeric(letters_calculated_features[ , 18])
non_letters_calculated_features[ , 18] <- as.numeric(non_letters_calculated_features[ , 18])
# # get the mean of each column
letters_mean <- c(colMeans(letters_calculated_features[ , 3:18]))
non_letters_mean <- c(colMeans(non_letters_calculated_features[ , 3:18]))
# get the medians of each column
letters_median <- c(colMedians(as.matrix(letters_calculated_features[ , 3:18])))
non_letters_median <- c(colMedians(as.matrix(non_letters_calculated_features[ , 3:18])))
#get the standard deviation of each column
letters_sd <- colSds(as.matrix(letters_calculated_features[, 3:18][sapply(letters_calculated_features[ , 3:18 ], is.numeric)]))
non_letters_sd <- colSds(as.matrix(non_letters_calculated_features[ , 3:18][sapply(non_letters_calculated_features[ , 3:18], is.numeric)]))
stats_df<-data.frame(letters_mean, non_letters_mean, letters_median, non_letters_median, letters_sd, non_letters_sd)
return(stats_df)
}
# this function prints out a grouped bar plot for each of the features stat values
mean_stats_hist <- function(stats_df){
mean_df <- data.frame(stats_df[, 1], stats_df[, 2])
colnames(mean_df) <- c("letters", "non_letters")
rownames(mean_df) <- c("nr_pix", "rows_with_1", "cols_with_1",
"rows_with_3p", "cols_with_3p", "aspect_ratio", "neigh_1",
"no_neigh_above","no_neigh_below","no_neigh_left","no_neigh_right",
"no_neigh_horiz", "no_neigh_vert","connected_areas","eyes","custom")
mean_df <- data.frame(feature = row.names(mean_df), mean_df)
mean_df <- tidyr::pivot_longer(mean_df, cols=c('letters', 'non_letters'), names_to='Symbols',values_to="Mean")
mean_hist <- ggplot(mean_df, aes(x=feature, y=Mean, fill=Symbols))+
theme_bw() +
geom_bar(stat='identity', position='dodge') +
ggtitle("Difference between letter and non letter means") +  xlab("Calculated features") +
scale_x_discrete(limits=stats_df$names)
plot(mean_hist)
}
median_stats_hist <- function(stats_df){
median_df <- data.frame(stats_df[, 3], stats_df[, 4])
colnames(median_df) <- c("letters", "non_letters")
rownames(median_df) <- c("nr_pix", "rows_with_1", "cols_with_1",
"rows_with_3p", "cols_with_3p", "aspect_ratio", "neigh_1",
"no_neigh_above","no_neigh_below","no_neigh_left","no_neigh_right",
"no_neigh_horiz", "no_neigh_vert","connected_areas","eyes","custom")
median_df <- data.frame(feature = row.names(median_df), median_df)
median_df <- tidyr::pivot_longer(median_df, cols=c('letters', 'non_letters'), names_to='Symbols',values_to="Median")
median_hist <- ggplot(median_df, aes(x=feature, y=Median, fill=Symbols))+
theme_bw() +
geom_bar(stat='identity', position='dodge') +
ggtitle("Difference between letter and non letter medians") +  xlab("Calculated features") +
scale_x_discrete(limits=stats_df$names)
plot(median_hist)
}
standard_deviation_stats_hist <- function(stats_df){
sd_df <- data.frame(stats_df[, 3], stats_df[, 4])
colnames(sd_df) <- c("letters", "non_letters")
rownames(sd_df) <- c("nr_pix", "rows_with_1", "cols_with_1",
"rows_with_3p", "cols_with_3p", "aspect_ratio", "neigh_1",
"no_neigh_above","no_neigh_below","no_neigh_left","no_neigh_right",
"no_neigh_horiz", "no_neigh_vert","connected_areas","eyes","custom")
sd_df <- data.frame(feature = row.names(sd_df), sd_df)
sd_df <- tidyr::pivot_longer(sd_df, cols=c('letters', 'non_letters'), names_to='Symbols',values_to="Standard deviation")
sd_hist <- ggplot(sd_df, aes(x=feature, y=`Standard deviation`, fill=Symbols))+
theme_bw() +
geom_bar(stat='identity', position='dodge') +
ggtitle("Difference between letter and non letter standard deviation") +  xlab("Calculated features") +
scale_x_discrete(limits=stats_df$names)
plot(sd_hist)
}
}
{
library(readr)
library(ggplot2)
# matrix stats has functions for getting colMedian and standard deviation
library(matrixStats)
library(knitr) # using this to make a table for my report.
mydata <- read.csv("40294886_features.csv", row.names = NULL)
calculated_features <- data.frame(mydata)
colnames(calculated_features) <- c("Label", "Index", "nr_pix", "rows_with_1", "cols_with_1",
"rows_with_3p", "cols_with_3p", "aspect_ratio", "neigh_1",
"no_neigh_above","no_neigh_below","no_neigh_left","no_neigh_right",
"no_neigh_horiz", "no_neigh_vert","connected_areas","eyes","custom")
mydata[ , 3:18] <- as.numeric(mydata[ , 3,18])
# 3.2 code
# creating over lappting bar charts for the 3 features That appear to stand out
code_3_2(calculated_features)
code_3_2 <- function(calculated_features){
stats_df <- get_stats(calculated_features)
mean_stats_hist(stats_df)
median_stats_hist(stats_df)
standard_deviation_stats_hist(stats_df)
}
# this function calculated mean, median and standard deviation for each of the features
# then returns a dataframe containing each of these
get_stats <- function(calculated_features){
letters_calculated_features <- calculated_features[1:80,]
non_letters_calculated_features<- calculated_features[81:140,]
letters_calculated_features[, 18] <- as.numeric(letters_calculated_features[ , 18])
non_letters_calculated_features[ , 18] <- as.numeric(non_letters_calculated_features[ , 18])
# # get the mean of each column
letters_mean <- c(colMeans(letters_calculated_features[ , 3:18]))
non_letters_mean <- c(colMeans(non_letters_calculated_features[ , 3:18]))
# get the medians of each column
letters_median <- c(colMedians(as.matrix(letters_calculated_features[ , 3:18])))
non_letters_median <- c(colMedians(as.matrix(non_letters_calculated_features[ , 3:18])))
#get the standard deviation of each column
letters_sd <- colSds(as.matrix(letters_calculated_features[, 3:18][sapply(letters_calculated_features[ , 3:18 ], is.numeric)]))
non_letters_sd <- colSds(as.matrix(non_letters_calculated_features[ , 3:18][sapply(non_letters_calculated_features[ , 3:18], is.numeric)]))
stats_df<-data.frame(letters_mean, non_letters_mean, letters_median, non_letters_median, letters_sd, non_letters_sd)
return(stats_df)
}
# this function prints out a grouped bar plot for each of the features stat values
mean_stats_hist <- function(stats_df){
mean_df <- data.frame(stats_df[, 1], stats_df[, 2])
colnames(mean_df) <- c("letters", "non_letters")
rownames(mean_df) <- c("nr_pix", "rows_with_1", "cols_with_1",
"rows_with_3p", "cols_with_3p", "aspect_ratio", "neigh_1",
"no_neigh_above","no_neigh_below","no_neigh_left","no_neigh_right",
"no_neigh_horiz", "no_neigh_vert","connected_areas","eyes","custom")
mean_df <- data.frame(feature = row.names(mean_df), mean_df)
mean_df <- tidyr::pivot_longer(mean_df, cols=c('letters', 'non_letters'), names_to='Symbols',values_to="Mean")
mean_hist <- ggplot(mean_df, aes(x=feature, y=Mean, fill=Symbols))+
theme_bw() +
geom_bar(stat='identity', position='dodge') +
ggtitle("Difference between letter and non letter means") +  xlab("Calculated features") +
scale_x_discrete(limits=stats_df$names)
plot(mean_hist)
}
median_stats_hist <- function(stats_df){
median_df <- data.frame(stats_df[, 3], stats_df[, 4])
colnames(median_df) <- c("letters", "non_letters")
rownames(median_df) <- c("nr_pix", "rows_with_1", "cols_with_1",
"rows_with_3p", "cols_with_3p", "aspect_ratio", "neigh_1",
"no_neigh_above","no_neigh_below","no_neigh_left","no_neigh_right",
"no_neigh_horiz", "no_neigh_vert","connected_areas","eyes","custom")
median_df <- data.frame(feature = row.names(median_df), median_df)
median_df <- tidyr::pivot_longer(median_df, cols=c('letters', 'non_letters'), names_to='Symbols',values_to="Median")
median_hist <- ggplot(median_df, aes(x=feature, y=Median, fill=Symbols))+
theme_bw() +
geom_bar(stat='identity', position='dodge') +
ggtitle("Difference between letter and non letter medians") +  xlab("Calculated features") +
scale_x_discrete(limits=stats_df$names)
plot(median_hist)
}
standard_deviation_stats_hist <- function(stats_df){
sd_df <- data.frame(stats_df[, 3], stats_df[, 4])
colnames(sd_df) <- c("letters", "non_letters")
rownames(sd_df) <- c("nr_pix", "rows_with_1", "cols_with_1",
"rows_with_3p", "cols_with_3p", "aspect_ratio", "neigh_1",
"no_neigh_above","no_neigh_below","no_neigh_left","no_neigh_right",
"no_neigh_horiz", "no_neigh_vert","connected_areas","eyes","custom")
sd_df <- data.frame(feature = row.names(sd_df), sd_df)
sd_df <- tidyr::pivot_longer(sd_df, cols=c('letters', 'non_letters'), names_to='Symbols',values_to="Standard deviation")
sd_hist <- ggplot(sd_df, aes(x=feature, y=`Standard deviation`, fill=Symbols))+
theme_bw() +
geom_bar(stat='identity', position='dodge') +
ggtitle("Difference between letter and non letter standard deviation") +  xlab("Calculated features") +
scale_x_discrete(limits=stats_df$names)
plot(sd_hist)
}
}
source("section3_code.R")
source("section3_code.R")
source("section3_code.R")
source("~/ai-project/section3_code.R", echo=TRUE)
source("~/ai-project/section3_code.R", echo=TRUE)
source("~/ai-project/section3_code.R", echo=TRUE)
source("~/ai-project/section3_code.R", echo=TRUE)
source("~/ai-project/section3_code.R", echo=TRUE)
source("section3_code.R")
source("section3_code.R")
source("~/ai-project/section3_code.R", echo=TRUE)
source("section3_code.R")
source("~/ai-project/section3_code.R", echo=TRUE)
source("~/ai-project/section3_code.R", echo=TRUE)
source("~/ai-project/section3_code.R", echo=TRUE)
source("section3_code.R")
source("~/ai-project/section3_code.R", echo=TRUE)
source("~/ai-project/section3_code.R", echo=TRUE)
source("section3_code.R")
source("~/ai-project/section3_code.R", echo=TRUE)
source("~/ai-project/section3_code.R", echo=TRUE)
source("section3_code.R")
source("section3_code.R")
source("~/ai-project/section4_code.R", echo=TRUE)
source("section4_code.R")
source("section4_code.R")
source("section4_code.R")
source("section4_code.R")
source("section3_code.R")
source("section3_code.R")
source("section3_code.R")
source("section3_code.R")
source("section3_code.R")
source("section3_code.R")
source("section3_code.R")
source("section3_code.R")
